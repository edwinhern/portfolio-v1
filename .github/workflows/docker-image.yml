name: Docker Image CI

on:
  push:
    branches: ['develop']
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_VERCEL_URL: ${{ secrets.NEXT_PUBLIC_VERCEL_URL }}
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      SANITY_API_READ_TOKEN: ${{ secrets.SANITY_API_READ_TOKEN }}
      SKIP_ENV_VALIDATION: true

    steps:
      - uses: actions/checkout@v4

      # Login step only executed for pushes to develop
      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/develop'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_Token }}

      # Build and tag the production Docker image
      - name: Build the production Docker image
        run: |
          docker build . \
            --file Dockerfile \
            --target runner \
            --tag ghcr.io/${{ github.repository }}:${{ github.sha }} \
            --build-arg NEXT_PUBLIC_VERCEL_URL=${{ secrets.NEXT_PUBLIC_VERCEL_URL }} \
            --build-arg NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }} \
            --build-arg NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }} \
            --build-arg SANITY_API_READ_TOKEN=${{ secrets.SANITY_API_READ_TOKEN }}
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
          fi

      # Push the production Docker image
      - name: Push the production Docker image
        if: github.ref == 'refs/heads/develop'
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest
